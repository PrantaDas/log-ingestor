services:
  kafka:
    image: confluentinc/cp-kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka
      - mongo
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER=locahlhost:9092
      - KAFKA_TOPIC=error_logs
      - KAFKA_GROUP_ID=log_group
      - MONGODB_URI=mongodb://mongo:27017
      - COLLECTION_NAME=errors
      - DB_NAME=ingester
      - PORT=8080
    networks:
      - app-network

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    depends_on:
      - kafka
      - mongo
    environment:
      - KAFKA_BROKER=localhost:9092
      - KAFKA_TOPIC=error_logs
      - KAFKA_GROUP_ID=log_group
      - MONGODB_URI=mongodb://mongo:27017
      - COLLECTION_NAME=errors
      - DB_NAME=ingester
      - PORT=8080
    networks:
      - app-network

volumes:
  mongo-data:


networks:
  app-network:
    driver: bridge
